import {
  Button,
  DatePicker,
  Divider,
  Form,
  Input,
  InputNumber,
  Modal,
  Table,
} from "antd";
import { useEffect, useState } from "react";
import dayjs from "dayjs";
import {
  createOrUpdateDiscount,
  deleteDiscount,
  getAllDiscount,
} from "../../api/discount";
import MyButton from "../../components/MyButton";

const { RangePicker } = DatePicker;

export default function DiscountAdmin() {
  const [isModalVisible, setIsModalVisible] = useState(false);
  const [editingDiscount, setEditingDiscount] = useState(null);
  const [discountData, setDiscountData] = useState(null);
  const [form] = Form.useForm();

  // Fetch data
  useEffect(() => {
    const getDiscounts = async () => {
      const data = await getAllDiscount();
      setDiscountData(data);
    };

    getDiscounts();
  }, []);

  // üü¢ M·ªü modal cho "Th√™m m·ªõi"
  const showCreateModal = () => {
    setEditingDiscount(null); // Kh√¥ng c√≥ d·ªØ li·ªáu c≈©
    form.resetFields(); // Reset form
    setIsModalVisible(true);
  };

  // üü° M·ªü modal cho "C·∫≠p nh·∫≠t"
  const showUpdateModal = (discount) => {
    setEditingDiscount(discount);
    form.setFieldsValue({
      ...discount,
      range:
        discount.startDate && discount.endDate
          ? [dayjs(discount.startDate), dayjs(discount.endDate)]
          : [],
    });
    setIsModalVisible(true);
  };

  // üî¥ ƒê√≥ng modal v√† reset form
  const handleCancelModal = () => {
    setIsModalVisible(false);
    form.resetFields();
  };

  // X·ª≠ l√Ω submit form
  const handleSubmit = async (values) => {
    const formattedValues = {
      ...values,
      startDate: values.range ? values.range[0].format("YYYY-MM-DD") : null,
      endDate: values.range ? values.range[1].format("YYYY-MM-DD") : null,
    };

    await createOrUpdateDiscount(formattedValues);

    setIsModalVisible(false);
    form.resetFields();
  };

  const handleDelete = async (discount) => {
    await deleteDiscount(discount.id);
  };

  const columns = [
    {
      title: "STT",
      key: "stt",
      render: (_, __, index) => index + 1,
    },
    {
      title: "Name",
      dataIndex: "name",
      key: "name",
    },
    {
      title: "Percent",
      dataIndex: "percent",
      key: "percent",
    },
    {
      title: "Start date",
      dataIndex: "startDate",
      key: "startDate",
    },
    {
      title: "End date",
      dataIndex: "endDate",
      key: "endDate",
    },
    {
      title: "H√†nh ƒë·ªông",
      key: "action",
      render: (discount) => (
        <>
          <Button type="link" onClick={() => showUpdateModal(discount)}>
            C·∫≠p nh·∫≠t
          </Button>
          <Button type="link" danger onClick={() => handleDelete(discount)}>
            X√≥a
          </Button>
        </>
      ),
    },
  ];

  return (
    <>
      <h2 style={{ marginBottom: 20 }}>Qu·∫£n l√Ω m√£ gi·∫£m gi√°</h2>

      <Button type="primary" onClick={showCreateModal}>
        Th√™m m·ªõi
      </Button>

      <Divider />

      <Table
        dataSource={discountData}
        columns={columns}
        rowKey="id"
        pagination={false}
      />

      {/* Modal th√™m/s·ª≠a */}
      <Modal
        title={editingDiscount ? "C·∫≠p nh·∫≠t m√£ gi·∫£m gi√°" : "Th√™m m√£ gi·∫£m gi√°"}
        open={isModalVisible}
        onCancel={handleCancelModal}
        footer={null}
        style={{
          display: "flex",
          justifyContent: "center",
          alignItems: "center",
        }}
      >
        <Form
          form={form}
          onFinish={handleSubmit}
          style={{ marginBottom: 10, maxWidth: 450, minWidth: 300 }}
        >
          <Form.Item name="id" style={{ display: "none" }}>
            <Input />
          </Form.Item>

          <Form.Item
            name="name"
            rules={[{ required: true, message: "Vui l√≤ng nh·∫≠p t√™n" }]}
          >
            <Input placeholder="T√™n m√£ gi·∫£m gi√°" />
          </Form.Item>

          <Form.Item
            name="percent"
            rules={[{ required: true, message: "Vui l√≤ng nh·∫≠p ph·∫ßn trƒÉm" }]}
          >
            <InputNumber
              min={0}
              max={100}
              addonAfter="%"
              placeholder="Ph·∫ßn trƒÉm gi·∫£m gi√°"
              style={{ width: "100%" }}
              step={0.01}
            />
          </Form.Item>

          <Form.Item name="range">
            <RangePicker
              format="YYYY-MM-DD"
              style={{ width: "100%" }}
              placeholder={["T·ª´ ng√†y", "ƒê·∫øn ng√†y"]}
            />
          </Form.Item>

          <Form.Item>
            <MyButton style={{ width: "100%" }} htmlType="submit">
              {editingDiscount ? "C·∫≠p nh·∫≠t" : "L∆∞u"}
            </MyButton>
          </Form.Item>
        </Form>
      </Modal>
    </>
  );
}
